.t-abslt {
    position: absolute;
}

.t-italic{
    font-style:italic
}
.t-rltv {
    position: relative;
}

.t-hidd {
    overflow: hidden;
}

.t-grid {
    display: grid;
}
.t-block {
    display: block;
}
.t-desk {
    display: none!important;
    @include min1024() {
        display: grid!important;
    }
}
.t-desk__block {
    display: none!important;
    @include min1024() {
        display: block!important;
    }
}
.t-height{
    height:fit-content;

    @include min768 {
        height:fit-content;
    }
    @include min1024 {
        height: calc(91vh - 75px);
    }
}

.t-mobile {
    display: grid!important;
    @include min1024() {
        display: none!important;
    }
}

.t-mobile__block {
    display: inline-block!important;
    @include min1024() {
        display: none!important;
    }
}

@media screen and (min-width: 48em) {
    .t-abslt_sm {
        position: absolute;
    }
    .t-block_sm {
        display: block;
    }
    .t-rltv_sm {
        position: relative;
    }
    .t-grid_md {
        display: grid;
    }
    .t-initial_md {
        display: initial;
    }
}

@media screen and (min-width: 64em) {
    .t-abslt_md {
        position: absolute;
    }
    .t-rltv_md {
        position: relative;
    }
    .t-grid_md {
        display: grid;
    }
    .t-block_md {
        display: block;
    }
}

@media screen and (min-width: 1440px) {
    w10_lg{
        width: 10%;
    }
}

/*
Fade timing 
Thanks to : https://codepen.io/andreasfurster/pen/QWKWNGe
*/
.t-fade{
    opacity: 0;
}
// Animation settings
$totalTime: 14s;
$items: 2;
$transitionSpeed: 3;

// Calculate transition + display time in seconds
$transitionTime: 0s + $totalTime / ($items * $transitionSpeed * 2);
$displayTime: (0s + $totalTime - ($transitionTime * $items)) / $items;

// Set transition for each element
@for $i from 1 through $items {
  .t-fade:nth-child(#{$i}) {
    // Delay is increased for each item
    // starting with an offset of -$transitionTime so the first element is displayed on load
    $delay: -$transitionTime + ($transitionTime + $displayTime) * ($i - 1);
    animation: fadeinout $totalTime linear $delay infinite;
  }
}

// Calculate percentages of the times for keyframes
$transitionPercentage: 0% + 100 * ($transitionTime / $totalTime);
$displayPercentage: 0% + 100 * ($displayTime / $totalTime);

@keyframes fadeinout {
  0% {
    opacity: 0;
  }
  #{$transitionPercentage},
  #{$transitionPercentage + $displayPercentage} {
    opacity: 1;
  }
  #{$transitionPercentage + $displayPercentage + $transitionPercentage},
  100% {
    opacity: 0;
  }
}